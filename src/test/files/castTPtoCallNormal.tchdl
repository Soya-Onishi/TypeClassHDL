package test

trait Call0 {
  def f() -> Int
}

impl Call0 for Int {
  def f() -> Int { 32 }
}

trait Call1 {
  def f() -> Int
}

impl Call1 for Int {
  def f() -> Int { 64 }
}

module Top
impl Top {
  input def in() -> Int {
    f[Int](0)
  }
}

def f[T](n: Int) -> Int
  where T: Call0 + Call1
{
  (n as Call0).f()
}